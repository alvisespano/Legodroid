@startuml

title __LIB's Class Diagram__\n

  namespace it.unive.dais.legodroid {
    namespace lib {
      class it.unive.dais.legodroid.lib.EV3 {
          # channel : AsyncChannel<?>
          {static} # channels : Set<AsyncChannel>
          # task : AsyncTask<Void, Void, Void>
          {static} - TAG : String
          + EV3()
          + EV3()
          + cancel()
          + hashCode()
          + isCancelled()
          + run()
          + run()
          + toString()
      }
    }
  }
  

  namespace it.unive.dais.legodroid {
    namespace lib {
      class it.unive.dais.legodroid.lib.EV3.AlreadyRunningException {
          + AlreadyRunningException()
      }
    }
  }
  

  namespace it.unive.dais.legodroid {
    namespace lib {
      class it.unive.dais.legodroid.lib.EV3.Api {
          - executor : Executor
          + close()
          + execAsync()
          + getGyroSensor()
          + getLightSensor()
          + getPercentValue()
          + getSiValue()
          + getTachoMotor()
          + getTouchSensor()
          + getUltrasonicSensor()
          + send()
          + sendNoReply()
          + soundTone()
          # Api()
          - prefaceGetValue()
      }
    }
  }
  

  namespace it.unive.dais.legodroid {
    namespace lib {
      enum InputPort {
        _1
        _2
        _3
        _4
      }
    }
  }
  

  namespace it.unive.dais.legodroid {
    namespace lib {
      enum OutputPort {
        A
        B
        C
        D
      }
    }
  }
  

  namespace it.unive.dais.legodroid {
    namespace lib {
      class it.unive.dais.legodroid.lib.EV3.SpooledAsyncChannel {
          - channel : Channel<P>
          - q : List<FutureReply>
          + SpooledAsyncChannel()
          + close()
          + getPeer()
          + hashCode()
          + send()
          + send()
          + sendNoReply()
          + toString()
      }
    }
  }
  

  namespace it.unive.dais.legodroid {
    namespace lib {
      class it.unive.dais.legodroid.lib.EV3.SpooledAsyncChannel.FutureReply {
          {static} - GET_MAX_TIMEOUT_MS : long
          - cond : Condition
          - id : int
          - lock : Lock
          - waiting : boolean
          + cancel()
          + get()
          + get()
          + isCancelled()
          + isDone()
          - FutureReply()
          - setReply()
      }
    }
  }
  

  namespace it.unive.dais.legodroid {
    namespace lib {
      class it.unive.dais.legodroid.lib.EV3.SpooledAsyncChannel.SpoolerTask {
          {static} - MAX_RETRIES : int
          {static} - TAG : String
          - channel : Channel<?>
          - q : List<FutureReply>
          # doInBackground()
          - SpoolerTask()
      }
    }
  }
  

  namespace it.unive.dais.legodroid {
    namespace lib {
      class it.unive.dais.legodroid.lib.EV3.SpoolerAsyncTask {
          - TAG : String
          - main : Consumer<? super A>
          - make : Function<EV3, A>
          # doInBackground()
          - SpoolerAsyncTask()
      }
    }
  }
  

  it.unive.dais.legodroid.lib.EV3 +-down- it.unive.dais.legodroid.lib.EV3.AlreadyRunningException
  it.unive.dais.legodroid.lib.EV3 +-down- it.unive.dais.legodroid.lib.EV3.Api
  it.unive.dais.legodroid.lib.EV3 +-down- it.unive.dais.legodroid.lib.EV3.InputPort
  it.unive.dais.legodroid.lib.EV3 +-down- it.unive.dais.legodroid.lib.EV3.OutputPort
  it.unive.dais.legodroid.lib.EV3 +-down- it.unive.dais.legodroid.lib.EV3.SpooledAsyncChannel
  it.unive.dais.legodroid.lib.EV3 +-down- it.unive.dais.legodroid.lib.EV3.SpoolerAsyncTask
  it.unive.dais.legodroid.lib.EV3.AlreadyRunningException -up-|> java.util.concurrent.ExecutionException
  it.unive.dais.legodroid.lib.EV3.Api .up.|> java.lang.AutoCloseable
  it.unive.dais.legodroid.lib.EV3.Api o-- it.unive.dais.legodroid.lib.EV3 : ev3
  it.unive.dais.legodroid.lib.EV3.SpooledAsyncChannel .up.|> it.unive.dais.legodroid.lib.comm.AsyncChannel
  it.unive.dais.legodroid.lib.EV3.SpooledAsyncChannel o-- it.unive.dais.legodroid.lib.EV3.SpooledAsyncChannel.SpoolerTask : task
  it.unive.dais.legodroid.lib.EV3.SpooledAsyncChannel +-down- it.unive.dais.legodroid.lib.EV3.SpooledAsyncChannel.FutureReply
  it.unive.dais.legodroid.lib.EV3.SpooledAsyncChannel +-down- it.unive.dais.legodroid.lib.EV3.SpooledAsyncChannel.SpoolerTask
  it.unive.dais.legodroid.lib.EV3.SpooledAsyncChannel.FutureReply .up.|> java.util.concurrent.Future
  it.unive.dais.legodroid.lib.EV3.SpooledAsyncChannel.FutureReply o-- it.unive.dais.legodroid.lib.comm.Reply : reply
  it.unive.dais.legodroid.lib.EV3.SpooledAsyncChannel.SpoolerTask -up-|> android.os.AsyncTask
  it.unive.dais.legodroid.lib.EV3.SpoolerAsyncTask -up-|> android.os.AsyncTask
  it.unive.dais.legodroid.lib.EV3.SpoolerAsyncTask o-- it.unive.dais.legodroid.lib.EV3 : ev3


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
